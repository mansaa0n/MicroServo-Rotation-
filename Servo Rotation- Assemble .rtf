{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red0\green129\blue0;\red0\green129\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c50588\c0;\csgenericrgb\c0\c50588\c0;}
\margl1440\margr1440\vieww27680\viewh14880\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 /*******************************************************************************\
* This section provides address values that exist in the DE2-115 Computer\
******************************************************************************/\
/* Devices MEMORY LOCATIONS */\cf0 \
.equ KEYS, 0x00202060\
.equ GPIO_OUT, 0x00202040\
.equ TIMER, 0x00202020\
\
\pard\pardeftab720\partightenfactor0
\cf3 /* Beginning of Program */\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 .text\
.global _start\
_start:\
\pard\pardeftab720\partightenfactor0
\cf3 /* Memory Allocation */\
\cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
movia r4, GPIO_OUT \cf3 #put GPIO PIN OUTPUT in reg 4\cf0 \
movia r10, KEYS \cf3 #KEY1 \
\cf0 \
.global MAIN \cf3 #
\f1  Making Main global \

\f0 \cf0 \
movi r7, 0xd \cf2 #put KEY1 in reg7\
\cf0 movi r8, 0xb \cf2 #put KEY2 in reg8\
\cf0 movi r9, 0x7 \cf2 #put KEY3 in reg9\
\
\pard\pardeftab720\partightenfactor0
\cf3 /* Main function/Loop */\cf2 \
\pard\pardeftab720\partightenfactor0
\cf0 MAIN:\
ldbio r5, (r10) \cf2 #load current status of keys\
\cf0 beq r5, r7, ROTATESERVO0 \cf2 # key1  if r7 == ROTATESERVO0 r5 is high \
\cf0 beq r5, r8, ROTATESERVO90 \cf2 # key2 \cf3 if r8 == ROTATESERVO90 r5 is high \cf2 \
\cf0 beq r5, r9, ROTATESERVO180 \cf2 # key3 \cf3 if r9 == ROTATESERVO180 r5 is high \cf2 \
\cf0 br MAIN                   \
\pard\pardeftab720\partightenfactor0
\cf2 /* ROTATE SERVO 0 degree*/\
\pard\pardeftab720\partightenfactor0
\cf0 ROTATESERVO0:\
movi r11, 3        \cf3 #mov immediate 010\'85 prepare high signal to servo\cf0 \
stwio r11, 0(r4)  \cf3 #store in r4 no shift send signal \cf0 \
movia r18, 0b100     \cf3 #mov immediate 010\'85 prepare Low signal to servo\cf0 \
stbio r18, (r3)  \cf3 #store in r4 no shift send signal \cf0 \
movia r2, 2        \cf3 #wait time \cf0 \
wasteTime0: subi r2,r2, 1 \cf3 #loop to wast time  \cf0 \
bne r2, r0, wasteTime0  \
movia r11, -3        \cf3 #mov immediate 101\'85 prepare Low signal to servo\cf0 \
stwio r11, 0(r4)      \cf3 #store in r4 no shift send signal \cf0 \
movia r2, 2          \
wasteTime1: subi r2,r2, 1\
bne r2, r0, wasteTime1\
movi r11, 3      \
stwio r11, 0(r4)\
movia r18, 0b000    \cf3 #stop signal to stop movement \cf0 \
stbio r18, (r3)    \
br MAIN              \cf3 #back to main to wait for another input, i.e external interrupt\cf0 \
\pard\pardeftab720\partightenfactor0
\cf2 /* ROTATE SERVO 90 degree*/\
\pard\pardeftab720\partightenfactor0
\cf0 ROTATESERVO90:\
movi r11, 3\
stwio r11, 0(r4)\
movia r18, 0b10000\
stbio r18, (r3)\
movia r2, 22000\
wasteTime2: subi r2,r2, 1\
bne r2, r0, wasteTime2\
movia r11, -3\
stwio r11, 0(r4)\
movia r2, 22000\
wasteTime3: subi r2,r2, 1\
bne r2, r0, wasteTime3\
movi r11, 3\
stwio r11, 0(r4)\
movia r18, 0b00000\
stbio r18, (r3)\
br MAIN\
\pard\pardeftab720\partightenfactor0
\cf2 /* ROTATE SERVO 180 degree*/\
\pard\pardeftab720\partightenfactor0
\cf0 ROTATESERVO180:\
movi r11, 3\
stwio r11, 0(r4)\
movia r2, 45000\
movia r18, 0b1000000\
stbio r18, (r3)\
wasteTime4: subi r2,r2, 1\
bne r2, r0, wasteTime4\
movia r11, -3\
stwio r11, 0(r4)\
movia r2, 45000\
wasteTime5: subi r2,r2, 1\
bne r2, r0, wasteTime5\
movi r11, 3\
stwio r11, 0(r4)\
movia r18, 0b0000000\
stbio r18, (r3)\
br MAIN\
.end}